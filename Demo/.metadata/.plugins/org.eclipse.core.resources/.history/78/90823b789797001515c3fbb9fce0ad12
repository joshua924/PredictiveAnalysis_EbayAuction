package edu.nyu.sz1288;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

import weka.classifiers.functions.Logistic;
import weka.core.Instance;
import weka.core.Instances;

public class WebServer {
	public static void main(String[] args) throws IOException {
		Logistic log = new Logistic();
		Instances instances = null;
        ServerSocket serverSocket = null;
        try {
//        	instances = IOHandler.readData("data/SelectedFeatureData.csv");
//			instances.setClassIndex(1);
//			instances = Filtering.discretize(instances);
//			instances.setClassIndex(0);
//			log.buildClassifier(instances);
            serverSocket = new ServerSocket(9999);
        } catch (Exception e) {
            System.err.println("Failed to start server on port: 9999.");
            System.exit(1);
        }

        Socket clientSocket = null;
        while(true) {
	        try {
	            clientSocket = serverSocket.accept();
	        } catch (IOException e) {
	            System.err.println("Accept failed.");
	            System.exit(1);
	        }

	        PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
	        BufferedReader in = new BufferedReader(
	                new InputStreamReader(
	                clientSocket.getInputStream()));
	
	        String inputLine = null, str = "";
			while ((inputLine = in.readLine()) != null) {
	             str += inputLine;
	        }
			
			//Instance inst = InstanceMaker.makeInstance(instances, str);
			try {
				//String outputLine = "" + log.classifyInstance(inst);
				//out.println(outputLine);
			} catch (Exception e) {
				System.err.println("The instance is invalid.");
			}
			out.println(str);
	        out.flush();
	        out.close();
	        in.close();
	        clientSocket.close();
	        serverSocket.close();
	    }
	}
}
