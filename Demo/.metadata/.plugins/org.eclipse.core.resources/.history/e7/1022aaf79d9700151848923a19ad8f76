package edu.nyu.sz1288;

import java.io.IOException;
import java.io.OutputStream;
import java.net.InetSocketAddress;
import java.util.Scanner;

import org.json.JSONObject;

import weka.classifiers.functions.Logistic;
import weka.core.Instances;

import com.sun.net.httpserver.HttpExchange;
import com.sun.net.httpserver.HttpHandler;
import com.sun.net.httpserver.HttpServer;

@SuppressWarnings("restriction")
public class QueryHandler implements HttpHandler {
	private Logistic log;
	
	public QueryHandler() throws Exception {
		Instances instances = IOHandler.readData("data/SelectedFeatureData.csv");
		instances.setClassIndex(1);
		instances = Filtering.discretize(instances);
		instances.setClassIndex(0);
		instances.deleteAttributeAt(2);
		
		log = new Logistic();
		//log.buildClassifier(instances);
		System.out.println(instances.firstInstance());
	}
	
	@Override
	public void handle(HttpExchange exchange) throws IOException {
		Scanner sc = new Scanner(exchange.getRequestBody());
		String str = "";
		while (sc.hasNextLine()) {
			str += sc.nextLine();
		}
		sc.close();
		JSONObject ob = new JSONObject(str);
		String response = "Response: " + ob.length();
		System.out.println(response);
		OutputStream responseBody = exchange.getResponseBody();
		responseBody.write(response.getBytes());
		responseBody.flush();
		responseBody.close();
	}
	
	
	public static void main(String[] args) throws Exception {
		HttpServer server = HttpServer.create(new InetSocketAddress(9999), 0);
		server.createContext("/", new QueryHandler());
		server.setExecutor(null);
		server.start();
	}
}
